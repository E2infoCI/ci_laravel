version: 2
jobs:
  build:
    docker:
      - image: circleci/php:7.2-apache-node-browsers
        environment:
        - APP_DEBUG: true
        - APP_ENV: testing
        - DB_HOST=127.0.0.1
        - DB_PORT=3306
        - DB_DATABASE=circleci
        - DB_USERNAME=circleci
        - DB_PASSWORD=circleci
      - image: circleci/mysql:5.7
        environment:
        - MYSQL_ROOT_PASSWORD=circleci
        - MYSQL_DATABASE=circleci
        - MYSQL_USER=circleci
        - MYSQL_PASSWORD=circleci

    working_directory: ~/repo

    steps:
      - checkout

      - run:
          name: version check
          command: |
            php -v

      - run:
          name: module install
          command: |
            php -v
            sudo docker-php-ext-install pdo_mysql
            sudo apt install -y mysql-client
            sudo apt-get install -y graphviz

      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "src/composer.json" }}
          - v1-dependencies-

      - run:
          name: composer self-update
          working_directory: src
          command: sudo composer self-update

      - run:
          name: composer install
          working_directory: src
          command: composer install -n --prefer-dist

      - save_cache:
          paths:
            - ./src/vendor
          key: v1-dependencies-{{ checksum "src/composer.json" }}

      - run:
          name: php artisan migrate
          working_directory: src
          command: php artisan migrate

      - run:
          name: mkdir & change permissions
          command: |
            sudo mkdir -p /output
            sudo chmod 777 /output
            sudo mkdir -p /output/doc
            sudo chmod 777 /output/doc

      - run:
          name: mysqldump
          command: sudo mysqldump -h 127.0.0.1 -u circleci -d circleci -pcircleci > /output/mysqldump.sql

      - run:
          name: Run PHP_CodeSniffer(PHPCS)
          working_directory: src
          command: ./vendor/bin/phpcs --report-file=/output/phpcs.result.xml --standard=../ci/phpcs.xml app

      - run:
          name: Run PHP Mess Detector(PHPMD)
          working_directory: src
          command: ./vendor/bin/phpmd app --reportfile /output/phpmd.result.xml xml ../ci/phpmd.ruleset.xml --ignore-violations-on-exit

      - run:
          name: Run PHP lines of code(PHPLOC)
          working_directory: src
          command: ./vendor/bin/phploc app  --log-xml=/output/phploc.result.xml

      - run:
          name: Run PHP Copy/Paste Detector(PHPCPD)
          working_directory: src
          command: ./vendor/bin/phpcpd app  --log-pmd=/output/phpcpd.result.xml || true

      - run:
          name: Run PHP Static Analysis Tool(PHPStan)
          working_directory: src
          command: ./vendor/bin/phpstan analyse app > /output/phpstan.result.txt || true

      - run:
          name: Run phpDocumentor(PHP-DOC)
          working_directory: src
          command: |
            mv ../ci/vendor/phpDocumentor.phar ./vendor/bin/
            php ./vendor/bin/phpDocumentor.phar run -d app -t /output/doc

      - run:
          name: Run mysqlviz
          working_directory: src
          command: |
            mv ../ci/vendor/mysqlviz ./vendor/
            php ./vendor/mysqlviz/mysqlviz_mod.php -f /output/mysqldump.sql > /output/mysqldump.dot
            dot -Tpng /output/mysqldump.dot > /output/mysqldump.png

      - run:
          name: Run Unit tests
          working_directory: src
          command: ./vendor/bin/phpunit

      - store_artifacts:
          path: /output
          destination: reports

